[["index.html", "Instructions_MS2-workflow Chapter 1 Prerequisites", " Instructions_MS2-workflow Muyao Xi (muyao.xi@sund.ku.dk) 2023-05-25 Chapter 1 Prerequisites Download OpenMS for converting the format of MS2-files (link for downloading OpenMS) Export MS2-files as .mzML from \\(dataanalysis\\) In order to install all essential packages, please run script set_up_enviroment.R under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\utils\\utils_MS2_set_up before doing any step If you would like to use tools on GNPS, please register for your personal username and password You should replace values of variables with yours under the section ends with ️ You could select whether run the section ends with ✈️ "],["file-converter.html", "Chapter 2 File converter 2.1 Source paths on the server 2.2 Specify the polarity  2.3 Path of application of openms  2.4 Path of storing files (.mzML) exported from dataanalysis for each polarity  2.5 Conduct", " Chapter 2 File converter The script 1.Pipeline_extension_format_converter.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules 2.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 2.2 Specify the polarity  polarity &lt;- &quot;POS&quot; #other options &quot;NEG&quot;, &quot;c(&quot;POS&quot;, &quot;NEG&quot;)&quot; 2.3 Path of application of openms  path_openms &lt;- &quot;C:/Program Files/OpenMS-2.8.0/bin&quot; 2.4 Path of storing files (.mzML) exported from dataanalysis for each polarity  path_files_from_DA &lt;- &quot;H:/From_SUND/Scripts/test/MS2pos_untarget&quot; 2.5 Conduct 2.5.1 Add extension (if not available) to files exported from dataanalysis files_from_DA &lt;- list.files(path_files_from_DA, full.names = TRUE) id_not_ext &lt;- setdiff(1:length(files_from_DA), grep(&quot;\\\\.mzML$|\\\\.d$&quot;, basename(files_from_DA))) if (length(id_not_ext) != 0) { file.rename(files_from_DA[id_not_ext], paste0(files_from_DA[id_not_ext], &quot;.mzML&quot;) ) } 2.5.2 File converter for adapting to run XCMS source(paste0(path_func, &quot;/file-conversion.R&quot;)) #Create a sibling folder for storing files from openms path_files_from_openms &lt;- paste0(dirname(path_files_from_DA), &quot;/mzML_openms_MS2_&quot;, polarity) if (!dir.exists(file.path(path_files_from_openms))) dir.create(path_files_from_openms, showWarnings = FALSE, recursive = TRUE) #conduct converting mapply(function(x, y) file_conversion(x,y, path_openms, &quot;.mzML&quot;, &quot;.mzML&quot;), path_files_from_openms, path_files_from_DA) "],["ms2-preprocessing-untargeted.html", "Chapter 3 MS2 preprocessing untargeted 3.1 XCMS 3.2 Extraction of MS2-spectra 3.3 (Optional) CAMERA", " Chapter 3 MS2 preprocessing untargeted 3.1 XCMS The script 2a.Pipeline_XCMS.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_preprocessing 3.1.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 3.1.2 Provide polarity  polarity &lt;- &quot;POS&quot; 3.1.3 Path of storing .mzML files (!!! have transferred by OpenMS)  path_files_mzML &lt;- &quot;H:/From_SUND/Scripts/test/mzML_openms_MS2_POS&quot; 3.1.4 Path of storing outputs  path_outputs &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 3.1.5 Parameters for preprocessing  3.1.5.1 Filter the compounds eluted too early and too late  rt_range &lt;- c(0.5, 15)*60 3.1.5.2 Peak picking  library(xcms) params &lt;- list() params$CentWave &lt;- CentWaveParam( ppm = 20, peakwidth = c(0.05,0.2)*60, snthresh = 5, noise = 1500, prefilter = c(3,1500), integrate = 2, mzdiff = -0.001, verboseColumns = TRUE, fitgauss = TRUE, extendLengthMSW = TRUE ) 3.1.5.3 Grouping for alignment  params$group1 &lt;- PeakDensityParam( sampleGroups = rep(1, length(list.files(path_files_mzML))), binSize = 0.01, bw = 2, minSamples = 1, minFraction = 0.3, maxFeatures = 20 ) 3.1.5.4 Alignment  params$PeakAlign &lt;- PeakGroupsParam( smooth = &quot;loess&quot;, span = 0.6, minFraction = 0.8, family = &quot;gaussian&quot;, extraPeaks = 3 #subset = ) 3.1.5.5 Grouping again with stricter condition after alignment  params$group2 &lt;- PeakDensityParam( sampleGroups = rep(1, length(list.files(path_files_mzML))), binSize = 0.01, bw = 1.8, minSamples = 1, minFraction = 0.6, maxFeatures = 20 ) 3.1.5.6 Gap filling  params$FillChromPeaksParam &lt;- FillChromPeaksParam(expandMz = 0, expandRt = 0, ppm = 30) 3.1.5.7 Conducting XCMS raw &lt;- readMSData(list.files(path_files_mzML, full.names = TRUE), mode = &quot;onDisk&quot;) source(paste0(path_utils_prepro, &quot;/XCMS.R&quot;)) 3.2 Extraction of MS2-spectra The script 3a.Pipeline_extract_MS2.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_preprocessing 3.2.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 3.2.2 Provide the polarity  polarity &lt;- &quot;POS&quot; #or &quot;NEG&quot; 3.2.3 Path of XCMSnExp object after conducting XCMS  path_rds_xcms_XCMSnExp &lt;- &quot;H:/From_SUND/Scripts/outputs/xcms_XCMSnExp_POS.rds&quot; 3.2.4 Path of storing outputs  path_outputs &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 3.2.5 Parameters for extracting MS2 spectra  3.2.5.1 Extraction: Threshold of rt and m/z for extraction and what type of object return  params &lt;- list() params$expandRt &lt;- 15 params$expandMz &lt;- 0.01 params$return.type &lt;- &quot;Spectra&quot; #&quot;MSpectra&quot;, &quot;list&quot;, &quot;List&quot; 3.2.6 Combining: Threshold of mz, proportion among all samples, type for combining, function for combining mz and intensity  # for getting consensus spectra for each feature at each collision energy params$tolerance &lt;- 0.005 params$peaks &lt;- &quot;intersect&quot; #&quot;union&quot; #report all peaks from all input spectra params$minProp &lt;- 0.7 params$intfun &lt;- median params$mzfun &lt;- median 3.2.7 (Optional but recommended) Plot the MS2 spectra ✈️ If not, please do not run this line plot_pdf &lt;- &quot;TRUE&quot; 3.2.8 (Optional but reconmended) Reduce the number of the MS2 spectra ✈️ If not, please do not run these two lines npeaks_reduce &lt;- &quot;TRUE&quot; npeaks_remaining &lt;- 60 3.2.9 Conduct the extraction of MS2 spectra source(paste0(path_utils_prepro, &quot;/extract_MS2.R&quot;)) 3.3 (Optional) CAMERA If you would like to get more information related to adduct, please run these lines, but you have to have at least 6 samples The script 4.(optional)Pipeline_CAMERA.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_preprocessing 3.3.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 3.3.2 Provide the polarity  polarity &lt;- &quot;POS&quot; 3.3.3 Path of storing outputs  path_outputs &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 3.3.4 Read XCMSnExp object after conducting XCMS  path_rds_xcms_XCMSnExp &lt;- &quot;H:/From_SUND/Scripts/outputs/xcms_XCMSnExp_POS.rds&quot; 3.3.5 Parameters for CAMERA  3.3.5.1 Grouping  params &lt;- list() params$perfwhm &lt;- 0.6 #percentage of the width of the FWHM (full width at half maximum) of the peak params$group_intval &lt;- &quot;into&quot; #the type of intensity value params$sigma &lt;- 6 #multiplier of the standard deviation 3.3.5.2 correlation  params$calcIso &lt;- FALSE #include isotope detection information for graph clustering params$calcCiS &lt;- FALSE #calculate correlation inside samples params$calsCaS &lt;- TRUE #calculate correlation across samples params$cor_eic_th &lt;- 0.7 #correlation threshold for RIC correlation params$cor_exp_th &lt;- 0.3 #threshold for intensity correlations across samples params$pval &lt;- 1E-6 #p-value threshold for testing correlation of significance params$graphMethod &lt;- &quot;lpc&quot; #clustering method for resulting correlation graph (hcs, lpc) params$intval_cor &lt;- &quot;into&quot; #selection of the intensity values 3.3.5.3 find isotopes  params$find_isoto_ppm &lt;- 10 #threshold for m/z params$mzabs &lt;- 0.01 #allowed variance for the search params$find_isoto_intval &lt;- &quot;into&quot; #choose intensity values for C12/C13 check 3.3.5.4 find adducts  params$find_addu_ppm &lt;- 10 params$mzabs &lt;- 0.01 params$multiplier &lt;- 4 #highest number(n) of allowed clusterion [nM+ion] 3.3.6 Conduct CAMERA source(paste0(path_utils_prepro, &quot;/CAMERA.R&quot;)) "],["ms2-preprocessing-targeted.html", "Chapter 4 MS2 preprocessing targeted 4.1 XCMS_check retention time 4.2 Extraction of MS2-spectra", " Chapter 4 MS2 preprocessing targeted Please copy the template of excel file which fits your data LCMS_library_template1.xlsx or LCMS_library_template2.xlsx under the folder J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\utils\\utils_MS2_preprocessing\\LCMS_library_template.xlsx and fill in the information related to the standards which you would like to preprocess. You must fill the columns with the column name in red color. Regarding the filled filenames, they are without extension 4.1 XCMS_check retention time Check if the retention time of each standard from MS2 is similar to that from MS1 The script 2b.Pipeline_XCMS_checkRT.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_preprocessing 4.1.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 4.1.2 Provide polarity  polarity &lt;- &quot;POS&quot; 4.1.3 Path of storing .mzML files without filenames  path_files_mzML &lt;- &quot;H:/From_SUND/Scripts/test/MS2pos_target/mzML_openms_MS2_POS&quot; 4.1.4 Path of storing outputs  path_outputs &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 4.1.5 Filename for containing information of standards including absolute path (Please fill in the provided template) as well as the sheet name  xlsx_std_info &lt;- &quot;H:/From_SUND/Projects/MP163/0220/INFO/LCMS_library_template.xlsx&quot; xlsx_std_sheetname &lt;- &quot;compound_table&quot; 4.1.6 Colname of retention time  colname_rt &lt;- &quot;Library.rt.RF&quot; # or &quot;Library.rt.HILLIC&quot; 4.1.7 Parameters for getting chromatogram  library(xcms) params &lt;- list() params$CentWave &lt;- CentWaveParam( ppm = 20, peakwidth = c(0.05,0.2)*60, snthresh = 2, noise = 1500, prefilter = c(3,1500), integrate = 2, mzdiff = -0.001, verboseColumns = TRUE, fitgauss = TRUE, extendLengthMSW = TRUE ) 4.1.8 Threshold for retention time (minutes) and m/z for ploting chromatogram  thre_rt = 2 thre_mz = 0.01 4.1.8.1 Conducting source(paste0(path_utils_prepro, &quot;/XCMS_checkRT.R&quot;)) 4.2 Extraction of MS2-spectra If you skip the previous step, please make sure the retention time to be as correct as possible and fill in information related to the standards in the excel file as mentioned in the previous step The script 3b.Pipeline_extract_MS2_std.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_preprocessing 4.2.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 4.2.2 Provide polarity  polarity &lt;- &quot;NEG&quot; 4.2.3 Path of storing .mzML files without filenames  path_files_mzML &lt;- &quot;H:/From_SUND/Projects/MP163/0220/NEG/mzML_DA_NEG/mzML_openms_MS2_NEG&quot; 4.2.4 Path of storing outputs  path_outputs &lt;- &quot;H:/From_SUND/Projects/MP163/0220/outputs&quot; 4.2.5 Absolute path of template with essential information of standards  xlsx_std_info &lt;- &quot;H:/From_SUND/Projects/MP163/0220/outputs_NEG/metadata_for_MS2.xlsx&quot; 4.2.6 colname of retention time  colname_rt &lt;- &quot;rt_detected&quot; # or &quot;Library.rt.RF&quot; # or &quot;Library.rt.HILLIC&quot; 4.2.7 Parameters for extracting MS2 spectra  4.2.7.1 Extraction: Threshold of rt and m/z for extraction  params &lt;- list() params$expandRt &lt;- 5 #seconds params$expandMz &lt;- 0.01 4.2.7.2 How many maximal number of scans you would like to keep for further getting combined spectrum for each std  n_scans &lt;- 6 # (5 CEs * 6/ 1 CE * 3) 4.2.7.3 Combining: Threshold of mz, proportion among all samples, type for combining, function for combining mz and intensity  #To get consensus spectra for each feature at each collision energy params$tolerance &lt;- 0.005 params$peaks &lt;- &quot;intersect&quot; #&quot;union&quot; #report all peaks from all input spectra params$minProp &lt;- 0.7 params$intfun &lt;- max params$mzfun &lt;- median 4.2.8 Conducting if (grepl(&quot;ku_00007&quot;, path_files_mzML)) { source(&quot;&quot;) } else {source(paste0(path_utils_prepro, &quot;/extract_MS2_std.R&quot;))} "],["ms2-annotation.html", "Chapter 5 MS2-Annotation 5.1 GNPS-Submit jobs based on CMN 5.2 GNPS-Submit jobs based on FBMN 5.3 GNPS-Download jobs 5.4 MS2-inhouse-library v.s. experimental data 5.5 Merge results from different source", " Chapter 5 MS2-Annotation This chapter consists of: Submit job of CMN and jobs based on CMN on GNPS (involved uploading files to the server of GNPS) Submit job of FBMN and jobs based on FBMN on GNPS (involved uploading files to the server of GNPS) Download all results from all submitted jobs and merge into a large table Compare MS2-experimental data with our in-house library Merge the results obtained from each GNPS-job and library-match into one table 5.1 GNPS-Submit jobs based on CMN The script 1b.Pipeline_GNPS_upload_submitjobs_based on CMN.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_Annotation The pipeline is for: 1.Uploading files to the server of GNPS. 2.Generating parameters for each job you would like to run. 3.Running CMN (classic molecular network) and a couple of other jobs based on CMN on GNPS. 4.Changing the parameters related to the jobs you would like to run. 5.Please pay attention to the filenames no space within each filename 5.1.1 Upload files 5.1.1.1 Source paths on the server and relevant function source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) source(paste0(path_func, &quot;/files_by_FTP.R&quot;)) 5.1.1.2 Provide polarity (upper case)  polarity &lt;- &quot;POS&quot; 5.1.1.3 Provide project information  project_name &lt;- &quot;&quot; round &lt;- &quot;&quot; sample_type &lt;- &quot;&quot; omics &lt;- &quot;&quot; method &lt;- &quot;&quot; 5.1.1.4 Information related to run jobs on GNPS  username &lt;- &quot;&quot; password &lt;- &quot;&quot; host &lt;- &quot;massive.ucsd.edu&quot; email &lt;- &quot;&quot; 5.1.1.5 Provide the path of storing files without filenames  To be sure only files for running CMN from unique polarity within the provided folder masterpath &lt;- &quot;H:/From_SUND/Scripts/test/mzML_openms_MS2_POS&quot; 5.1.1.6 Upload files into server (FTP) upload_file_FTP(masterpath, list.files(masterpath), username, password, host, project_name, round, sample_type, omics, method, polarity) 5.1.2 Prerequisites before generating parameters and submitting jobs  #Provide the path for storing the lists of both parameters and job ids path_outputs_params_jobids &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; #The two lines below are for storing all parameters related to the workflows you will run list_param_GNPS &lt;- list() list_jobid_GNPS &lt;- list() 5.1.3 CMN 5.1.3.1 Generate parameters  parameters_CMN &lt;- list() parameters_CMN[&quot;precursor_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_CMN[&quot;fragment_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_CMN[&quot;min_pairs_cos&quot;] &lt;- &quot;0.7&quot; parameters_CMN[&quot;minimum_matched_fragment_ions&quot;] &lt;- &quot;6&quot; parameters_CMN[&quot;maximum_shift&quot;] &lt;- &quot;500&quot; parameters_CMN[&quot;network_topk&quot;] &lt;- &quot;10&quot; parameters_CMN[&quot;minimum_cluster_size&quot;] &lt;- &quot;2&quot; parameters_CMN[&quot;run_mscluster&quot;] &lt;- &quot;on&quot; parameters_CMN[&quot;maximum_connected_component_size&quot;] &lt;- &quot;100&quot; parameters_CMN[&quot;library_search_min_matched_peaks&quot;] &lt;- &quot;6&quot; parameters_CMN[&quot;score_threshold&quot;] &lt;- &quot;0.7&quot; parameters_CMN[&quot;search_analogs&quot;] &lt;- &quot;0&quot; parameters_CMN[&quot;maximum_analog_search_mass_difference&quot;] &lt;- &quot;100&quot; parameters_CMN[&quot;filter_below_std_dev&quot;] &lt;- &quot;0.0&quot; parameters_CMN[&quot;minimum_peak_intensity&quot;] &lt;- &quot;0.0&quot; parameters_CMN[&quot;filter_precursor_window&quot;] &lt;- &quot;1&quot; parameters_CMN[&quot;filter_library&quot;] &lt;- &quot;1&quot; parameters_CMN[&quot;filter_peaks_10_50Da_window&quot;] &lt;- &quot;1&quot; parameters_CMN[&quot;filter_spectra_from_G6_as_blanks_before_networking&quot;] &lt;- &quot;0&quot; parameters_CMN[&quot;find_related_datasets&quot;] &lt;- &quot;0&quot; parameters_CMN[&quot;create_cluster_buckets_and_qiime2_biom_pcoa_plots_output&quot;] &lt;- &quot;1&quot; parameters_CMN[&quot;create_ili_mapping_output&quot;] &lt;- &quot;0&quot; 5.1.3.2 Submit CMN source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.1.4 Dereplicator 5.1.4.1 Generate parameters  parameters_CMN_Dereplicator &lt;- list() parameters_CMN_Dereplicator[&quot;precursor_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_CMN_Dereplicator[&quot;search_analogs&quot;] &lt;- &quot;on&quot; # if you do not select, just leave it empty like &quot;&quot; parameters_CMN_Dereplicator[&quot;fragment_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_CMN_Dereplicator[&quot;pnp_database&quot;] &lt;- &quot;pnpdatabase&quot; # &quot;dmisam&quot; for &quot;Extended&quot;, &quot;combined&quot; for &quot;Regular&quot; parameters_CMN_Dereplicator[&quot;max_charge&quot;] &lt;- &quot;2&quot; parameters_CMN_Dereplicator[&quot;accurate_p_values&quot;] &lt;- &quot;on&quot; # leave it empty, like &quot;&quot;, if you do not select it parameters_CMN_Dereplicator[&quot;min_number_of_AA&quot;] &lt;- &quot;5&quot; parameters_CMN_Dereplicator[&quot;max_isotopic_shift&quot;] &lt;- &quot;0&quot; # other options are &quot;1&quot;, &quot;2&quot; parameters_CMN_Dereplicator[&quot;adducts_Na&quot;] &lt;- &quot;&quot; # if select, give the value like &quot;on&quot; parameters_CMN_Dereplicator[&quot;adducts_K&quot;] &lt;- &quot;&quot; # if select, give the value like &quot;on&quot; parameters_CMN_Dereplicator[&quot;max_allowed_modification_mass&quot;] &lt;- &quot;150&quot; parameters_CMN_Dereplicator[&quot;min_matched_peaks_with_known_compounds&quot;] &lt;- &quot;5&quot; 5.1.4.2 Submit Dereplicator source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.1.5 Dereplicator plus 5.1.5.1 Generate parameters  parameters_CMN_Dereplicator_plus &lt;- list() parameters_CMN_Dereplicator_plus[&quot;precursor_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_CMN_Dereplicator_plus[&quot;fragment_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_CMN_Dereplicator_plus[&quot;max_charge&quot;] &lt;- &quot;2&quot; # other options are 1 and 3 parameters_CMN_Dereplicator_plus[&quot;min_score&quot;] &lt;- &quot;12&quot; 5.1.5.2 Submit Dereplicator plus source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.1.6 NAP 5.1.6.1 Generate parameters  *parameters are different from different polarities parameters_CMN_NAP &lt;- list() parameters_CMN_NAP[&quot;number_of_a_cluster_index&quot;] &lt;- &quot;0&quot; parameters_CMN_NAP[&quot;cosine_value_to_subselect_inside_a_cluster&quot;] &lt;- &quot;0.7&quot; parameters_CMN_NAP[&quot;n_first_candidates_for_consensus_score&quot;] &lt;- &quot;10&quot; parameters_CMN_NAP[&quot;use_fusion_result_for_consensus&quot;] &lt;- &quot;on&quot; # if deselect, &quot;&quot; parameters_CMN_NAP[&quot;accuracy_for_exact_mass_candidate_search_ppm&quot;] &lt;- &quot;15&quot; parameters_CMN_NAP[&quot;structure_database&quot;] &lt;- &quot;GNPS,HMDB,SUPNAT,NPAtlas,CHEBI,DRUGBANK,FooDB&quot; parameters_CMN_NAP[&quot;maximum_number_of_candidate_structures_in_the_graph&quot;] &lt;- &quot;10&quot; Be careful the inputs of parameters depending on the polarity, so only change the inputs related to the polarity you are working on if (polarity == &quot;POS&quot;) { parameters_CMN_NAP[&quot;acquisition_mode&quot;] &lt;- &quot;Positive&quot; parameters_CMN_NAP[&quot;adduct_ion_type&quot;] &lt;- &quot;[M+H]&quot; # other options are &quot;[M]&quot;,&quot;[M+NH4]&quot;,&quot;[M+Na]&quot;,&quot;[M+K]&quot;, &quot;[M+ACN+H]&quot; parameters_CMN_NAP[&quot;multiple_adduct_types&quot;] &lt;- &quot;[M+Na]&quot; } else if (polarity == &quot;NEG&quot;) { parameters_CMN_NAP[&quot;acquisition_mode&quot;] &lt;- &quot;Negative&quot; parameters_CMN_NAP[&quot;adduct_ion_type&quot;] &lt;- &quot;[M-H]&quot; # other options are &quot;[M+Cl]&quot;, &quot;[M+FA-H]&quot; parameters_CMN_NAP[&quot;multiple_adduct_types&quot;] &lt;- &quot;[M+Cl]&quot; } 5.1.6.2 Submit NAP source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.1.7 MS2LDA 5.1.7.1 Generate parameters  If the polarity is negative mode, recommend to exclude all motif by changing values from “yes” to “no” parameters_CMN_MS2LDA &lt;- list() parameters_CMN_MS2LDA[&quot;bin_width&quot;] &lt;- &quot;0.01&quot; #other options are 0.005, 0.05, 0.1, 0.5 parameters_CMN_MS2LDA[&quot;number_of_lda_iterations&quot;] &lt;- &quot;1000&quot; parameters_CMN_MS2LDA[&quot;minimum_ms2_intensity&quot;] &lt;- &quot;100&quot; parameters_CMN_MS2LDA[&quot;lda_free_motifs&quot;] &lt;- &quot;200&quot; parameters_CMN_MS2LDA[&quot;gnps_motif_inclusion&quot;] &lt;- &quot;yes&quot; #if deselect, &quot;no&quot; parameters_CMN_MS2LDA[&quot;massbank_motif_inclusion&quot;] &lt;- &quot;yes&quot; parameters_CMN_MS2LDA[&quot;urine_motif_inclusion&quot;] &lt;- &quot;yes&quot; parameters_CMN_MS2LDA[&quot;euphorbia_motif_inclusion&quot;] &lt;- &quot;no&quot; parameters_CMN_MS2LDA[&quot;rhamnaceae_plant_motif_inclusion&quot;] &lt;- &quot;no&quot; parameters_CMN_MS2LDA[&quot;streptomyces_and_salinisporus_motif_inclusion&quot;] &lt;- &quot;no&quot; parameters_CMN_MS2LDA[&quot;photorhabdus_and_xenorhabdus_motif_inclusion&quot;] &lt;- &quot;no&quot; parameters_CMN_MS2LDA[&quot;user_motif_inclusion&quot;] &lt;- &quot;None&quot; parameters_CMN_MS2LDA[&quot;overlap_score_threshold&quot;] &lt;- &quot;0.3&quot; parameters_CMN_MS2LDA[&quot;probability_value_threshold&quot;] &lt;- &quot;0.1&quot; parameters_CMN_MS2LDA[&quot;topx_in_node&quot;] &lt;- &quot;5&quot; 5.1.7.2 Submit MS2LDA source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.1.8 MNE (MolNetEnhancer) 5.1.8.1 Generate parameters  source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) parameters_CMN_MNE &lt;- list() parameters_CMN_MNE[&quot;enter_varquest_id&quot;] &lt;- &quot;None&quot; # leave it as &quot;None&quot; if this id is not available parameters_CMN_MNE[&quot;enter_nap_id&quot;] &lt;- list_jobid_GNPS$CMN_NAP_task_id parameters_CMN_MNE[&quot;enter_gnps_task_id&quot;] &lt;- list_jobid_GNPS$CMN_task_id parameters_CMN_MNE[&quot;enter_Dereplicator_id&quot;] &lt;- list_jobid_GNPS$CMN_Dereplicator_task_id parameters_CMN_MNE[&quot;enter_ms2lda_job_id&quot;] &lt;- list_jobid_GNPS$CMN_MS2LDA_task_id #Leave it as &quot;None&quot; if this id is not available 5.1.8.2 Submit MNE source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.2 GNPS-Submit jobs based on FBMN You only need to prepare a reprocessed MS2-spectra as the format of .mgf and the corresponding quantification table as the format of .txt or .csv 1. Not recommend to preprocess MS2 data by metaboscape. Because 1) Regarding .mgf file, the output is average MS2 spectra across multiple CEs; 2) Regarding .csv file, m/z is not correct 2. Change the parameters in the sections below related to the workflows you would like to run 5.2.1 Form quantification table The script 0b.Pipeline_quan_table.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_Annotation 5.2.1.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 5.2.1.2 Provide the polarity  polarity &lt;- &quot;POS&quot; 5.2.1.3 Path of storing outputs  path_output &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 5.2.1.4 Path of extracted MS2 spectra  path_rds_expMS2 &lt;- &quot;H:/From_SUND/Scripts/outputs/exp_MS2_POS.rds&quot; 5.2.1.5 Path of object after conducting XCMS  path_rds_xcms_XCMSnExp &lt;- &quot;H:/From_SUND/Scripts/outputs/xcms_XCMSnExp_POS.rds&quot; 5.2.1.6 (Optional) Path of object CAMERA (if conduct CAMERA) ✈️ If you have run CAMERA, please provide the path, otherwise, skip running the line below path_rds_cam_xsAnnotate &lt;- &quot;H:/From_SUND/Scripts/outputs/cam_xsAnnotate_POS.rds&quot; 5.2.1.7 Conduct to get quantification table for FBMN on GNPS if (exists(&quot;path_rds_cam_xsAnnotate&quot;)) { #Type of intensity value to extract from object of xcms_XCMSnExp feature_int &lt;- &quot;into&quot; } source(paste0(path_utils_annotation, &quot;/quan_table.R&quot;)) 5.2.2 Upload files, generate parameters, and submit jobs The script 1b.Pipeline_GNPS_upload_submitjobs_based on FBMN.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_Annotation The pipeline is for: 1.Uploading files to the server of GNPS. 2.Generating parameters for each job you would like to run. 3.Running FBMN (feature based molecular network) and a couple of other jobs based on FBMN on GNPS. 4.Changing the parameters related to the jobs you would like to run. 5.2.2.1 Upload files 5.2.2.1.1 Source paths on the server and relevant function source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) source(paste0(path_func, &quot;/files_by_FTP.R&quot;)) 5.2.2.1.2 Provide polarity (upper case)  polarity &lt;- &quot;POS&quot; 5.2.2.1.3 Provide project information  project_name &lt;- &quot;workflow_test&quot; round &lt;- &quot;1&quot; #what ordinal number comes current samples? e.g. &quot;1&quot;, or &quot;2&quot;,... sample_type &lt;- &quot;serum&quot; omics &lt;- &quot;metabolomics&quot; method &lt;- &quot;RP&quot; 5.2.2.1.4 Information related to run jobs on GNPS or computer room  username &lt;- &quot;xx&quot; password &lt;- &quot;xx&quot; host &lt;- &quot;massive.ucsd.edu&quot; email &lt;- &quot;xx&quot; 5.2.2.1.5 Provide the path of storing files without filenames  masterpath &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 5.2.2.1.6 Provide the filenames  .txt or .csvof quantification table and .mgf file of MS2 spectra filenames &lt;- c(&quot;quantable_POS.txt&quot;, &quot;exp_MS2_POS.mgf&quot;) 5.2.2.1.7 Provide method you used for preprocessing the MS2-spectra data  prep_method &lt;- &quot;XCMS3&quot; #other options are illustrated within the function in the file of &quot;submit_jobs_to_GNPS.R&quot; 5.2.2.1.8 Upload files into server (FTP) upload_file_FTP(masterpath, filenames, username, password, host, project_name, round, sample_type, omics, method, polarity) 5.2.2.2 Prerequisites before generating parameters and submitting jobs  #Provide the path for storing the lists of both parameters and job ids path_outputs_params_jobids &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; #The two lines below are for storing all parameters related to the workflows you will run list_param_GNPS &lt;- list() list_jobid_GNPS &lt;- list() 5.2.2.3 FBMN 5.2.2.3.1 Generate parameters  parameters_FBMN &lt;- list() parameters_FBMN[&quot;precursor_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_FBMN[&quot;fragment_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_FBMN[&quot;min_pairs_cos&quot;] &lt;- &quot;0.7&quot; parameters_FBMN[&quot;minimum_matched_fragment_ions&quot;] &lt;- &quot;6&quot; parameters_FBMN[&quot;maximum_shift&quot;] &lt;- &quot;500&quot; parameters_FBMN[&quot;network_topk&quot;] &lt;- &quot;10&quot; parameters_FBMN[&quot;maximum_connected_component_size&quot;] &lt;- &quot;100&quot; parameters_FBMN[&quot;library_search_min_matched_peaks&quot;] &lt;- &quot;6&quot; parameters_FBMN[&quot;score_threshold&quot;] &lt;- &quot;0.7&quot; parameters_FBMN[&quot;search_analogs&quot;] &lt;- &quot;0&quot; # don&#39;t search/ &quot;1&quot; search parameters_FBMN[&quot;maximum_analog_search_mass_difference&quot;] &lt;- &quot;100&quot; # it only works once select the search analog parameters_FBMN[&quot;top_results_to_report_per_query&quot;] &lt;- &quot;1&quot; parameters_FBMN[&quot;minimum_peak_intensity&quot;] &lt;- &quot;0.0&quot; parameters_FBMN[&quot;filter_precursor_window&quot;] &lt;- &quot;1&quot; # filter / &quot;0&quot; don&#39;t filter parameters_FBMN[&quot;filter_library&quot;] &lt;- &quot;1&quot; # filter / &quot;0&quot; don&#39;t filter parameters_FBMN[&quot;filter_peaks_10_50Da_window&quot;] &lt;- &quot;1&quot; # filter / &quot;0&quot; don&#39;t filter parameters_FBMN[&quot;normalization_per_file&quot;] &lt;- &quot;None&quot; # represent no normalization, the other option is &quot;RowSum&quot; parameters_FBMN[&quot;aggregation_method_for_peak_abundances_per_group&quot;] &lt;- &quot;Mean&quot; # another option is &quot;Sum&quot; parameters_FBMN[&quot;pcoa_distance_metric&quot;] &lt;- &quot;cosine&quot; # other options are &quot;braycurtis&quot;, &quot;euclidean&quot;, &quot;jaccard&quot; parameters_FBMN[&quot;metadata_column_to_compare&quot;] &lt;- &quot;None&quot; parameters_FBMN[&quot;run_stats_and_plots&quot;] &lt;- &quot;No&quot; # other option is &quot;Yes&quot; parameters_FBMN[&quot;metadata_field_to_compare_1&quot;] &lt;- &quot;None&quot; parameters_FBMN[&quot;metadata_field_to_compare_2&quot;] &lt;- &quot;None&quot; parameters_FBMN[&quot;metadata_column_to_facet&quot;] &lt;- &quot;None&quot; parameters_FBMN[&quot;run_Dereplicator&quot;] &lt;- &quot;1&quot; # &quot;0&quot; represent don&#39;t run and &quot;1&quot; represents run 5.2.2.3.2 Submit FBMN source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.2.2.4 Dereplicator plus 5.2.2.4.1 Generate parameters  parameters_FBMN_Dereplicator_plus &lt;- list() parameters_FBMN_Dereplicator_plus[&quot;precursor_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_FBMN_Dereplicator_plus[&quot;fragment_ion_mass_tolerance&quot;] &lt;- &quot;0.02&quot; parameters_FBMN_Dereplicator_plus[&quot;max_charge&quot;] &lt;- &quot;2&quot; # other options are 1 and 3 parameters_FBMN_Dereplicator_plus[&quot;min_score&quot;] &lt;- &quot;12&quot; 5.2.2.4.2 Submit Dereplicator plus source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.2.2.5 NAP *parameters are different from different polarities 5.2.2.5.1 Generate parameters  parameters_FBMN_NAP &lt;- list() parameters_FBMN_NAP[&quot;number_of_a_cluster_index&quot;] &lt;- &quot;0&quot; parameters_FBMN_NAP[&quot;cosine_value_to_subselect_inside_a_cluster&quot;] &lt;- &quot;0.7&quot; parameters_FBMN_NAP[&quot;n_first_candidates_for_consensus_score&quot;] &lt;- &quot;10&quot; parameters_FBMN_NAP[&quot;use_fusion_result_for_consensus&quot;] &lt;- &quot;on&quot; # if deselect, &quot;&quot; parameters_FBMN_NAP[&quot;accuracy_for_exact_mass_candidate_search_ppm&quot;] &lt;- &quot;15&quot; parameters_FBMN_NAP[&quot;structure_database&quot;] &lt;- &quot;GNPS,HMDB,SUPNAT,NPAtlas,CHEBI,DRUGBANK,FooDB&quot; parameters_FBMN_NAP[&quot;maximum_number_of_candidate_structures_in_the_graph&quot;] &lt;- &quot;10&quot; Be careful the inputs of parameters depending on the polarity, so only change the inputs related to the polarity you are working on if (polarity == &quot;POS&quot;) { parameters_FBMN_NAP[&quot;acquisition_mode&quot;] &lt;- &quot;Positive&quot; parameters_FBMN_NAP[&quot;adduct_ion_type&quot;] &lt;- &quot;[M+H]&quot; # other options are &quot;[M]&quot;, &quot;[M+NH4]&quot;, &quot;[M+Na]&quot;, &quot;[M+K]&quot;, &quot;[M+ACN+H]&quot; parameters_FBMN_NAP[&quot;multiple_adduct_types&quot;] &lt;- &quot;[M+Na]&quot; } else if (polarity == &quot;NEG&quot;) { parameters_FBMN_NAP[&quot;acquisition_mode&quot;] &lt;- &quot;Negative&quot; parameters_FBMN_NAP[&quot;adduct_ion_type&quot;] &lt;- &quot;[M-H]&quot; # other options are &quot;[M+Cl]&quot;, &quot;[M+FA-H]&quot; parameters_FBMN_NAP[&quot;multiple_adduct_types&quot;] &lt;- &quot;[M+Cl]&quot; } 5.2.2.5.2 Submit NAP source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.2.2.6 (Optional) MS2LDA ✈️ 5.2.2.6.1 Generate parameters  parameters_FBMN_MS2LDA &lt;- list() parameters_FBMN_MS2LDA[&quot;bin_width&quot;] &lt;- &quot;0.01&quot; #other options are 0.005, 0.05, 0.1, 0.5 parameters_FBMN_MS2LDA[&quot;number_of_lda_iterations&quot;] &lt;- &quot;1000&quot; parameters_FBMN_MS2LDA[&quot;minimum_ms2_intensity&quot;] &lt;- &quot;100&quot; parameters_FBMN_MS2LDA[&quot;lda_free_motifs&quot;] &lt;- &quot;200&quot; parameters_FBMN_MS2LDA[&quot;gnps_motif_inclusion&quot;] &lt;- &quot;yes&quot; #if deselect, &quot;no&quot; parameters_FBMN_MS2LDA[&quot;massbank_motif_inclusion&quot;] &lt;- &quot;yes&quot; parameters_FBMN_MS2LDA[&quot;urine_motif_inclusion&quot;] &lt;- &quot;yes&quot; parameters_FBMN_MS2LDA[&quot;euphorbia_motif_inclusion&quot;] &lt;- &quot;no&quot; parameters_FBMN_MS2LDA[&quot;rhamnaceae_plant_motif_inclusion&quot;] &lt;- &quot;no&quot; parameters_FBMN_MS2LDA[&quot;streptomyces_and_salinisporus_motif_inclusion&quot;] &lt;- &quot;no&quot; parameters_FBMN_MS2LDA[&quot;photorhabdus_and_xenorhabdus_motif_inclusion&quot;] &lt;- &quot;no&quot; parameters_FBMN_MS2LDA[&quot;user_motif_inclusion&quot;] &lt;- &quot;None&quot; parameters_FBMN_MS2LDA[&quot;overlap_score_threshold&quot;] &lt;- &quot;0.3&quot; parameters_FBMN_MS2LDA[&quot;probability_value_threshold&quot;] &lt;- &quot;0.1&quot; parameters_FBMN_MS2LDA[&quot;topx_in_node&quot;] &lt;- &quot;5&quot; 5.2.2.6.2 Submit MS2LDA source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.2.2.7 MNE (MolNetEnhancer) 5.2.2.7.1 Generate parameters  source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) parameters_FBMN_MNE &lt;- list() parameters_FBMN_MNE[&quot;enter_varquest_id&quot;] &lt;- &quot;None&quot; # leave it as &quot;None&quot; if this id is not available parameters_FBMN_MNE[&quot;enter_nap_id&quot;] &lt;- list_jobid_GNPS$FBMN_NAP_task_id parameters_FBMN_MNE[&quot;enter_gnps_task_id&quot;] &lt;- list_jobid_GNPS$FBMN_task_id parameters_FBMN_MNE[&quot;enter_ms2lda_job_id&quot;] &lt;- list_jobid_GNPS$FBMN_MS2LDA_task_id # or &quot;None&quot; `` 5.2.2.7.2 Submit MNE source(paste0(path_utils_annotation, &quot;/GNPS_upload_submitjobs.R&quot;)) 5.3 GNPS-Download jobs The script 2.Pipeline_GNPS_download_jobs.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_Annotation 5.3.1 Source paths on the server  source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 5.3.2 Provide polarity (upper case)  polarity &lt;- &quot;POS&quot; 5.3.3 Provide the path of storing downloaded files  download_path &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 5.3.4 Provide project information  project_name &lt;- &quot;&quot; round &lt;- &quot;&quot; sample_type &lt;- &quot;&quot; omics &lt;- &quot;&quot; method &lt;- &quot;&quot; 5.3.5 Provide the absolute path of “list of job ids” by including the name of that list  name should start with list_jobid_GNPS path_list &lt;- &quot;H:/From_SUND/Scripts/outputs/jobids_CMN_based_workflow_test_1_serum_metabolomics_RF_POS.rds&quot; 5.3.6 Download results from the list of job ids list_jobid_GNPS &lt;- readRDS(path_list) source(paste0(path_utils_annotation, &quot;/GNPS_downloadjobs.R&quot;)) 5.4 MS2-inhouse-library v.s. experimental data The script 1c.Pipeline_exp_vs_lib.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_Annotation 5.4.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 5.4.2 Provide polarity (upper case)  polarity &lt;- &quot;POS&quot; # &quot;POS&quot; &quot;NEG&quot; 5.4.3 Provide path of preprocessed MS2-spectra file  It is the absolute path by including the file name as the format of *.mgf path_mgf_expMS2 &lt;- &quot;H:/From_SUND/Scripts/outputs/exp_MS2_POS.mgf&quot; 5.4.4 provide the thresholds  They are for m/z and similarity score which is used for cutting off the matches with the scores lower than the threshold mz_threshold &lt;- 0.01 cor_threshold &lt;- 0.7 5.4.5 Provide the path of storing output  path_outputs &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 5.4.6 (Optional) Provide the method for comparison ✈️ The default method is cp_method &lt;- \"cosine\" you could also try other methods for comparison “nspecanglescore”, “navdistscore”, or “neuclideanscore” cp_method &lt;- &quot;cosine&quot; 5.4.7 Conduct if (polarity == &quot;POS&quot;) { path_lib_MS2 &lt;- paste0(path_MS2_lib, &quot;/RP_lib_MS2_60_POS.mgf&quot;) } else if (polarity == &quot;NEG&quot;) { path_lib_MS2 &lt;- paste0(path_MS2_lib, &quot;/RP_lib_MS2_60_NEG.mgf&quot;) } source(paste0(path_func, &quot;/lib_vs_exp_MS2.R&quot;)) MS2_vs_exp(path_lib_MS2, path_mgf_expMS2, mz_threshold, cor_threshold, polarity, path_outputs, cp_method) 5.5 Merge results from different source 5.5.1 Merging outputs from jobs have run on GNPS into a table The script 3.Pipeline_merge_outputs_from_GNPS.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_Annotation 5.5.1.1 Source paths on the server and relevant function source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) source(paste0(path_func, &quot;/Merge_outputs_from_GNPS.R&quot;)) 5.5.1.2 Provide the path of storing files downloaded from GNPS  The path should be end with gnps_outputs path_downloaded_files &lt;- &quot;H:/From_SUND/Scripts/outputs/workflow_test_1_serum_metabolomics_RF/gnps_outputs&quot; 5.5.1.3 Provide the absolute path of “list of job ids” by including the name of that list  name should start with list_jobid_GNPS path_list &lt;- &quot;H:/From_SUND/Scripts/outputs/jobids_CMN_workflow_test_1_serum_metabolomics_RF_POS.rds&quot; 5.5.1.4 Provide path for storing the merged result  path_outputs &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 5.5.1.5 Provide which method did you use for preprocessing MS2 data  If you run jobs based on CMN, skip running the line below prep_method &lt;- &quot;XCMS3&quot; 5.5.1.6 Provide polarity (upper case)  polarity &lt;- &quot;POS&quot; 5.5.1.7 Provide what workflow based  workflow_based &lt;- &quot;CMN&quot; # or &quot;FBMN&quot; 5.5.1.8 Conduct library(dplyr) list_jobid &lt;- readRDS(path_list) workflow_all &lt;- names(list_jobid) %&gt;% gsub(&quot;_task_id&quot;, &quot;&quot;,.) workflow &lt;- workflow_all[grepl(workflow_based, workflow_all)] %&gt;% strsplit(&quot;[A-Z]+_&quot;) %&gt;% unlist() %&gt;% unique() %&gt;% na_if(&quot;&quot;) %&gt;% na.omit() if (workflow_based == &quot;FBMN&quot;) { Merge_outputs_from_GNPS(path_downloaded_files, prep_method, workflow, polarity, path_outputs) } else if (workflow_based == &quot;CMN&quot;) { Merge_outputs_from_GNPS(path_downloaded_files, NULL, workflow, polarity, path_outputs) } 5.5.1.9 Merge library-match into GNPS-match The script 4.Pipeline_merge_lib-match_GNPS-match.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules\\MS2_Annotation It is more precise to merge the result from library-match with the results from FBMN-based jobs on GNPS 5.5.1.9.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 5.5.1.9.2 Provide path of excel file of storing matched records and sheet names  The file name should be like MS2-match-outputs.xlsx and please provide the absolute path path_MS2_match &lt;- &quot;H:/From_SUND/Scripts/outputs/MS2-match-outputs.xlsx&quot; sheetName_GNPS &lt;- &quot;GNPS_summary_based_FBMN_POS&quot; sheetName_lib &lt;- &quot;MS2-lib-vs-exp_cosine_POS&quot; 5.5.1.9.3 Provide the polarity (upper case)  polarity &lt;- &quot;POS&quot; 5.5.1.9.4 Provide the path for storing output  path_output &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 5.5.1.9.5 Conduct source(paste0(path_utils_annotation, &quot;/merge_lib-match_GNPS-match.R&quot;)) "],["small-tools.html", "Chapter 6 Small tools 6.1 Play with various ids", " Chapter 6 Small tools This chapter consists of: Among compound name, if you have any one as identifier (PubChem id (cid), KEEG id, HMDB, CAS), you will get the rest of them and corresponding chemical properties related to this compound Copy excel file under the folder of utils_DBs_api, replace the context of identifier as yours. e.g. If your identifier is PubChem_CID, choose the sheet name as PubChem_CID, replace the context of PubChem_CID numbers as yours 6.1 Play with various ids The script DBs_ids_properties.R is available under the folder of J:\\CBMR\\SUN-CBMR-Metabolomics\\Workflow\\Script\\modules 6.1.1 Source paths on the server source(&quot;H:/From_SUND/Scripts/utils/utils_MS2_set_up/set_up_paths.R&quot;) 6.1.2 Provide identifier for grabbing other information  You have to choose one from these 5 options (“PubChem_CID”, “Compound_Name”, “KEGG”, “CAS”, “HMDB”) identifier &lt;- &quot;PubChem_CID&quot; 6.1.3 Provide filename and sheetname for searching other information  absolute path filename_xlsx &lt;- &quot;H:/From_SUND/Scripts/test/test_DB_ids.xlsx&quot; 6.1.4 What properties you would like to get  You could find other options from function get_info_based_cid_to_xlsx.R under the folder of containing functions properties &lt;- c(&quot;IUPACName&quot;, &quot;InChIKey&quot;, &quot;CanonicalSMILES&quot;, &quot;MonoisotopicMass&quot;) 6.1.5 Provide the path for containing output  path_output &lt;- &quot;H:/From_SUND/Scripts/outputs&quot; 6.1.6 Conduct source(paste0(path_utils_DBs_api, &quot;/DBs_api.R&quot;)) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
